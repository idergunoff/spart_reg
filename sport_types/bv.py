from config import *


class BVStatus(StatesGroup):
    FULLNAME_1 = State()
    BIRTHDAY_1 = State()
    COMPANY_1 = State()
    POSITION_1 = State()
    PHONE_1 = State()
    FULLNAME_2 = State()
    BIRTHDAY_2 = State()
    COMPANY_2 = State()
    POSITION_2 = State()
    PHONE_2 = State()
    END = State()


@dp.message_handler(commands=['cancel'], state='*')
@logger.catch
async def cancel(msg: types.Message, state: FSMContext):
    current_state = await state.get_state()
    if current_state is None:
        return
    await state.finish()
    await msg.reply('–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é')
    logger.info(f'USER "{msg.from_user.id}" COMMAND CANCEL')


@dp.callback_query_handler(text='bv')
@logger.catch
async def bv(call: types.CallbackQuery):
    await BVStatus.FULLNAME_1.set()
    await call.message.edit_text('<b>–£—á–∞—Å—Ç–Ω–∏–∫ 1 (–º—É–∂—á–∏–Ω–∞)</b>\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ –§–ò–û –ø–æ–ª–Ω–æ—Å—Ç—å—é\n\n<i>–î–ª—è –æ—Ç–º–µ–Ω—ã –Ω–∞–∂–º–∏—Ç–µ /cancel</i>')


@dp.message_handler(state=BVStatus.FULLNAME_1)
@logger.catch
async def fullname_1(msg: types.Message, state: FSMContext):
    await state.update_data(fullname_1=msg.text)
    await BVStatus.BIRTHDAY_1.set()
    await bot.send_message(msg.from_user.id, '<b>–£—á–∞—Å—Ç–Ω–∏–∫ 1 (–º—É–∂—á–∏–Ω–∞)</b>\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì'
                                             '\n\n<i>–î–ª—è –æ—Ç–º–µ–Ω—ã –Ω–∞–∂–º–∏—Ç–µ /cancel</i>')


@dp.message_handler(state=BVStatus.BIRTHDAY_1)
@logger.catch
async def birthday_1(msg: types.Message, state: FSMContext):
    await state.update_data(birthday_1=msg.text)
    await BVStatus.COMPANY_1.set()
    await bot.send_message(msg.from_user.id, '<b>–£—á–∞—Å—Ç–Ω–∏–∫ 1 (–º—É–∂—á–∏–Ω–∞)</b>\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–µ—Å—Ç–æ —Ä–∞–±–æ—Ç—ã (–Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ '
                                             '–ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è/—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ/–æ—Ç–¥–µ–ª/—Å–ª—É–∂–±–∞/—Ü–µ—Ö)\n\n<i>–î–ª—è –æ—Ç–º–µ–Ω—ã –Ω–∞–∂–º–∏—Ç–µ /cancel</i>')


@dp.message_handler(state=BVStatus.COMPANY_1)
@logger.catch
async def company_1(msg: types.Message, state: FSMContext):
    await state.update_data(company_1=msg.text)
    await BVStatus.POSITION_1.set()
    await bot.send_message(msg.from_user.id, '<b>–£—á–∞—Å—Ç–Ω–∏–∫ 1 (–º—É–∂—á–∏–Ω–∞)</b>\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ –¥–æ–ª–∂–Ω–æ—Å—Ç—å\n\n<i>–î–ª—è –æ—Ç–º–µ–Ω—ã –Ω–∞–∂–º–∏—Ç–µ /cancel</i>')


@dp.message_handler(state=BVStatus.POSITION_1)
@logger.catch
async def position_1(msg: types.Message, state: FSMContext):
    await state.update_data(position_1=msg.text)
    await BVStatus.PHONE_1.set()
    await bot.send_message(msg.from_user.id, '<b>–£—á–∞—Å—Ç–Ω–∏–∫ 1 (–º—É–∂—á–∏–Ω–∞)</b>\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞\n\n<i>–î–ª—è –æ—Ç–º–µ–Ω—ã –Ω–∞–∂–º–∏—Ç–µ /cancel</i>')


@dp.message_handler(state=BVStatus.PHONE_1)
@logger.catch
async def phone_1(msg: types.Message, state: FSMContext):
    await state.update_data(phone_1=msg.text)
    await BVStatus.FULLNAME_2.set()
    await bot.send_message(msg.from_user.id, '<b>–£—á–∞—Å—Ç–Ω–∏–∫ 2 (–∂–µ–Ω—â–∏–Ω–∞)</b>\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ –§–ò–û –ø–æ–ª–Ω–æ—Å—Ç—å—é\n\n<i>–î–ª—è –æ—Ç–º–µ–Ω—ã –Ω–∞–∂–º–∏—Ç–µ /cancel</i>')


@dp.message_handler(state=BVStatus.FULLNAME_2)
@logger.catch
async def fullname_2(msg: types.Message, state: FSMContext):
    await state.update_data(fullname_2=msg.text)
    await BVStatus.BIRTHDAY_2.set()
    await bot.send_message(msg.from_user.id, '<b>–£—á–∞—Å—Ç–Ω–∏–∫ 2 (–∂–µ–Ω—â–∏–Ω–∞)</b>\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì'
                                             '\n\n<i>–î–ª—è –æ—Ç–º–µ–Ω—ã –Ω–∞–∂–º–∏—Ç–µ /cancel</i>')


@dp.message_handler(state=BVStatus.BIRTHDAY_2)
@logger.catch
async def birthday_2(msg: types.Message, state: FSMContext):
    await state.update_data(birthday_2=msg.text)
    await BVStatus.COMPANY_2.set()
    await bot.send_message(msg.from_user.id, '<b>–£—á–∞—Å—Ç–Ω–∏–∫ 2 (–∂–µ–Ω—â–∏–Ω–∞)</b>\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–µ—Å—Ç–æ —Ä–∞–±–æ—Ç—ã (–Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ '
                                             '–ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è/—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ/–æ—Ç–¥–µ–ª/—Å–ª—É–∂–±–∞/—Ü–µ—Ö)\n\n<i>–î–ª—è –æ—Ç–º–µ–Ω—ã –Ω–∞–∂–º–∏—Ç–µ /cancel</i>')


@dp.message_handler(state=BVStatus.COMPANY_2)
@logger.catch
async def company_2(msg: types.Message, state: FSMContext):
    await state.update_data(company_2=msg.text)
    await BVStatus.POSITION_2.set()
    await bot.send_message(msg.from_user.id, '<b>–£—á–∞—Å—Ç–Ω–∏–∫ 2 (–∂–µ–Ω—â–∏–Ω–∞)</b>\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ –¥–æ–ª–∂–Ω–æ—Å—Ç—å\n\n<i>–î–ª—è –æ—Ç–º–µ–Ω—ã –Ω–∞–∂–º–∏—Ç–µ /cancel</i>')


@dp.message_handler(state=BVStatus.POSITION_2)
@logger.catch
async def position_2(msg: types.Message, state: FSMContext):
    await state.update_data(position_2=msg.text)
    await BVStatus.PHONE_2.set()
    await bot.send_message(msg.from_user.id, '<b>–£—á–∞—Å—Ç–Ω–∏–∫ 2 (–∂–µ–Ω—â–∏–Ω–∞)</b>\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞\n\n<i>–î–ª—è –æ—Ç–º–µ–Ω—ã –Ω–∞–∂–º–∏—Ç–µ /cancel</i>')


@dp.message_handler(state=BVStatus.PHONE_2)
@logger.catch
async def phone_2(msg: types.Message, state: FSMContext):
    await state.update_data(phone_2=msg.text)
    await BVStatus.END.set()
    bv_data = await state.get_data()
    btn_cancel = InlineKeyboardButton('–û—Ç–º–µ–Ω–∞', callback_data='cancel')
    btn_confirm = InlineKeyboardButton('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', callback_data='confirm')
    keyboard = InlineKeyboardMarkup(row_width=2).add(btn_cancel, btn_confirm)
    mes = f'<b>–ü–õ–Ø–ñ–ù–´–ô –í–û–õ–ï–ô–ë–û–õüèêüèñÔ∏è</b>\n\n' \
          f'<b><u>–£—á–∞—Å—Ç–Ω–∏–∫ 1 (–º—É–∂—á–∏–Ω–∞)</u></b>\n<i><b>–§–ò–û:</b></i> {bv_data["fullname_1"]}\n<i><b>–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è:</b></i> {bv_data["birthday_1"]}\n' \
          f'<i><b>–ú–µ—Å—Ç–æ —Ä–∞–±–æ—Ç—ã:</b></i> {bv_data["company_1"]}\n<i><b>–î–æ–ª–∂–Ω–æ—Å—Ç—å:</b></i> {bv_data["position_1"]}\n<b><i>–¢–µ–ª–µ—Ñ–æ–Ω:</i></b> {bv_data["phone_1"]}\n' \
          f'<b><u>–£—á–∞—Å—Ç–Ω–∏–∫ 2 (–∂–µ–Ω—â–∏–Ω–∞)</u></b>\n<i><b>–§–ò–û:</b></i> {bv_data["fullname_2"]}\n<i><b>–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è:</b></i> {bv_data["birthday_2"]}\n' \
          f'<i><b>–ú–µ—Å—Ç–æ —Ä–∞–±–æ—Ç—ã:</b></i> {bv_data["company_2"]}\n<i><b>–î–æ–ª–∂–Ω–æ—Å—Ç—å:</b></i> {bv_data["position_2"]}\n<i><b>–¢–µ–ª–µ—Ñ–æ–Ω:</b></i> {bv_data["phone_2"]}\n\n' \
          f'<i>–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å? –ï—Å–ª–∏ –≤ –¥–∞–Ω–Ω—ã—Ö –¥–æ–ø—É—â–µ–Ω—ã –æ—à–∏–±–∫–∏, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–û—Ç–º–µ–Ω–∞" –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é</i>'
    await bot.send_message(msg.from_user.id, mes, reply_markup=keyboard)


@dp.callback_query_handler(state=BVStatus.END, text='confirm')
@logger.catch
async def confirm(call: types.CallbackQuery, state: FSMContext):
    bv_data = await state.get_data()
    new_person_1 = Person(full_name=bv_data['fullname_1'], birthday=bv_data['birthday_1'],
                        company=bv_data['company_1'], position=bv_data['position_1'], phone=bv_data['phone_1'])
    new_person_2 = Person(full_name=bv_data['fullname_2'], birthday=bv_data['birthday_2'],
                        company=bv_data['company_2'], position=bv_data['position_2'], phone=bv_data['phone_2'])
    session.add(new_person_1)
    session.add(new_person_2)
    session.commit()
    new_bv = BeachVolleyball(username_reg=call.from_user.username, date_reg=datetime.now(), player_1=new_person_1.id,
                             player_2=new_person_2.id)
    session.add(new_bv)
    session.commit()
    await call.message.answer('–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥—ã –ø–æ –ø–ª—è–∂–Ω—ã–º –≤–æ–ª–µ–∏ÃÜ–±–æ–ª—É –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ')
    await state.finish()
    await call.answer()


@dp.callback_query_handler(state=BVStatus.END, text='cancel')
@logger.catch
async def cancel(call: types.CallbackQuery, state: FSMContext):
    await state.finish()
    await call.message.answer('–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞')
    await call.message.delete()
    await call.answer()

